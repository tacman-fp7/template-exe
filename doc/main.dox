/**
 * \defgroup walkman_template_exe TemplateExe
 * \ingroup walkman_templates
 * \ingroup walkman_modules
 *
 * \author Daniele E. Domenichelli <daniele.domenichelli@iit.it>
 *
 * \copyright specify license (e.g. for open source code this can be: Released under the terms of the GNU GPL v2.0.)
 *
 * \section walkman_template_exe_intro_sec Description
 * This module is a simple template that should be used to
 * as a guide for writing your own module.
 *
 * This document is a template for the documentation.
 * You might find it convenient to include an image:
 *
 * \section lib_sec Libraries
 * Specify here the module dependencies.
 *
 * \section parameters_sec Parameters
 * Provide a comprehensive list of the parameters you can pass to the module. For example:
 *
 * --file mymodule.ini: configuration file to use
 *
 * The file consists in a few sections:
 * \code
 * name        myModule
 * rate        20
 * \endcode
 *
 * \e name determines the name of the module
 * \e rate specifies the rate (ms) of the thread
 * ...
 *
 * \section portsa_sec Ports Accessed
 * This is important. List here ports accessed by the module. This is useful to build a list of dependencies between modules.
 *
 * \section portsc_sec Ports Created
 * Provide the list of ports created by the module. Separate them in input and output ports, specify expected data format.
 *
 * Example:
 *
 * Output ports:
 * - /mymodule/head/out: streams out a yarp::sig::vector which contains the commanded velocity of the head, the size of the vector matches the number of joints of the head
 * - /mymodule/right_arm/out: ...

 * Input ports:
 * - /mymodule/rpc:i: input ports to control the module, accept a yarp::os::Bottle which contains commands to start/stop/quit the module.
 *      - [start]: start the module
 *      - [stop]: stop the module (resume with start)
 *      - [quit]: quit the module (exit)
 *
 *\section in_files_sec Input Data Files
 * If your module expect data from a file, say so.
 *
 *\section out_data_sec Output Data Files
 * If your module writes data to a file, say so.
 *
 *
 * \section example_sec Example Instantiation of the Module
 * Provide here a typical example of use of your module.
 * Example:
 *
 * myModule --from module.ini
 * This file can be edited at TemplateExe/doc/main.dox
**/
